@model cloudscribe.Pagination.Models.PagedResult<ECommerceProject.AdminUI.Models.AdminRole.ViewUsersViewModel>
@{
    ViewData["Controller"] = "AdminUsers";
    ViewData["Action"] = "Search";
    ViewData["Model"] = Model;
}
<div class="container">


    @await Component.InvokeAsync("SearchForUsers",new  {UserName= ViewData["UserName"], RoleName = ViewData["RoleName"]})


    <table class="table table-sm table-striped text-center font-weight-bold">
        <thead>
        <tr>
            <th>User Name</th>
            <th>Role Name</th>
            <th>Options</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var user in Model.Data)
        {
            <tr>
                <td>@user.UserName</td>
                <td>@user.RoleName</td>
                @* <td><button type="button" class="btn btn-success" data-toggle="ajax-modal" data-target="#UpdateUserRoleState" data-url="@Url.Action("ViewUsers", "AdminRole", new {roleId = role.Id})">Change Role</button></td> *@
            </tr>
        }
        </tbody>
    </table>

    <div>
        <cs-pager cs-paging-pagenumber="@Model.PageNumber"
                  cs-paging-totalitems="@Model.TotalItems"
                  cs-paging-pagesize="@Model.PageSize"
                  asp-route-UserName="@ViewData["UserName"]"
                  asp-route-RoleName="@ViewData["RoleName"]"
                  cs-pagenumber-param="pageIndex"
                  asp-controller=@ViewData["Controller"]
                  asp-action=@ViewData["Action"]>

        </cs-pager>

    </div>
    @* <div> *@
    @*      $1$<span class="store-qty">Showing Model.TotalItems products in total</span>#1# *@
    @*       *@
    @*    <partial name="_PaginationPartial" view-data="ViewData" model="Model"/> *@
    @*   *@
    @*  </div> *@
</div>